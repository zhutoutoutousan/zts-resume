@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --neon-text-color: #f40;
  --neon-border-color: #08f;
  --chaos-color-1: #ff0066;
  --chaos-color-2: #00ff66;
  --chaos-color-3: #6600ff;
}

body {
  background-color: #000;
  color: #fff;
  font-family: 'Courier New', monospace;
  overflow-x: hidden;
}

.brutalist-container {
  min-height: 100vh;
  padding: 4rem 2rem;
  background: repeating-linear-gradient(
    45deg,
    #000,
    #000 10px,
    #111 10px,
    #111 20px
  );
  position: relative;
}

/* Chaos Effects */
.brutalist-container::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: 
    radial-gradient(circle at 30% 20%, rgba(255, 0, 102, 0.1) 0%, transparent 50%),
    radial-gradient(circle at 70% 80%, rgba(102, 0, 255, 0.1) 0%, transparent 50%);
  pointer-events: none;
  z-index: 1;
}

/* Hero Section */
.hero-section {
  height: 90vh;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  position: relative;
  padding: 2rem;
}

.hero-content {
  text-align: center;
  transition: transform 0.2s ease;
  animation: float 6s ease-in-out infinite;
  position: relative;
  z-index: 2;
}

.glitch-text {
  font-size: clamp(2rem, 8vw, 6rem);
  font-weight: bold;
  color: #fff;
  text-shadow: 
    2px 2px var(--neon-text-color),
    -2px -2px var(--neon-border-color),
    0 0 20px var(--neon-text-color);
  animation: glitch 1s infinite;
  letter-spacing: -2px;
}

.brutalist-text {
  font-size: clamp(1rem, 4vw, 2.5rem);
  letter-spacing: 0.2em;
  border: 4px solid #fff;
  padding: 1.5rem;
  margin: 2rem 0;
  background: #000;
  position: relative;
  color: #fff;
  text-transform: uppercase;
  box-shadow: 
    5px 5px 0 var(--chaos-color-1),
    -5px -5px 0 var(--chaos-color-2);
  transform: rotate(-2deg);
}

.shine-effect {
  position: absolute;
  top: 0;
  left: -100%;
  width: 50%;
  height: 100%;
  background: linear-gradient(
    to right,
    transparent,
    rgba(255, 255, 255, 0.4),
    transparent
  );
  animation: shine 2s infinite;
  z-index: 3;
}

/* Memory Game */
.memory-game {
  margin: 6rem 0;
  position: relative;
  z-index: 2;
}

.game-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
  gap: 1.5rem;
  max-width: 1000px;
  margin: 2rem auto;
  padding: 2rem;
  background: rgba(0, 0, 0, 0.8);
  border: 4px solid #fff;
  position: relative;
}

.game-grid::before {
  content: '';
  position: absolute;
  top: -10px;
  left: -10px;
  right: -10px;
  bottom: -10px;
  border: 2px solid var(--chaos-color-3);
  z-index: -1;
  animation: borderPulse 4s infinite;
}

.card {
  aspect-ratio: 1;
  perspective: 1000px;
  cursor: pointer;
}

.card-inner {
  position: relative;
  width: 100%;
  height: 100%;
  transform-style: preserve-3d;
  transition: transform 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

.card.flipped .card-inner {
  transform: rotateY(180deg) scale(1.05);
}

.card-front,
.card-back {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.5rem;
  font-weight: bold;
  border: 4px solid #fff;
  background: #000;
  color: #fff;
}

.card-front {
  background: linear-gradient(45deg, #000, #222);
  text-shadow: 0 0 10px var(--neon-text-color);
}

.card-back {
  transform: rotateY(180deg);
  background: linear-gradient(135deg, var(--chaos-color-1), var(--chaos-color-3));
}

@keyframes glitch {
  0% { transform: translate(0) skew(0deg); }
  20% { transform: translate(-2px, 2px) skew(2deg); }
  40% { transform: translate(-2px, -2px) skew(-2deg); }
  60% { transform: translate(2px, 2px) skew(-1deg); }
  80% { transform: translate(2px, -2px) skew(1deg); }
  100% { transform: translate(0) skew(0deg); }
}

@keyframes shine {
  0% { left: -100%; transform: skew(-20deg); }
  100% { left: 200%; transform: skew(-20deg); }
}

@keyframes float {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-20px); }
}

@keyframes borderPulse {
  0%, 100% { transform: scale(1); opacity: 1; }
  50% { transform: scale(1.05); opacity: 0.5; }
}

/* Random chaos elements */
.chaos-element {
  position: fixed;
  pointer-events: none;
  z-index: 1;
  opacity: 0.5;
  mix-blend-mode: exclusion;
  animation: chaosFloat 10s infinite;
}

@keyframes chaosFloat {
  0%, 100% { transform: translate(0, 0) rotate(0deg); }
  25% { transform: translate(50px, 20px) rotate(90deg); }
  50% { transform: translate(-30px, -40px) rotate(180deg); }
  75% { transform: translate(20px, 50px) rotate(270deg); }
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 0 0% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 0 0% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 3.9%;
    --primary: 0 0% 9%;
    --primary-foreground: 0 0% 98%;
    --secondary: 0 0% 96.1%;
    --secondary-foreground: 0 0% 9%;
    --muted: 0 0% 96.1%;
    --muted-foreground: 0 0% 45.1%;
    --accent: 0 0% 96.1%;
    --accent-foreground: 0 0% 9%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 89.8%;
    --input: 0 0% 89.8%;
    --ring: 0 0% 3.9%;
    --radius: 0.5rem;
  }

  .dark {
    --background: 0 0% 3.9%;
    --foreground: 0 0% 98%;
    --card: 0 0% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 0 0% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 0 0% 98%;
    --primary-foreground: 0 0% 9%;
    --secondary: 0 0% 14.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 0 0% 14.9%;
    --muted-foreground: 0 0% 63.9%;
    --accent: 0 0% 14.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 14.9%;
    --input: 0 0% 14.9%;
    --ring: 0 0% 83.1%;
  }
}

@layer base {
  * {
    @apply border-[#333];
  }
}

.chaos-container {
  min-height: 100vh;
  background: #000;
  position: relative;
  overflow: hidden;
}

.noise-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: url("data:image/svg+xml,%3Csvg viewBox='0 0 400 400' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.6' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
  opacity: 0.05;
  pointer-events: none;
  z-index: 1;
}

.glitch-container {
  position: relative;
  padding: 2rem;
  text-align: center;
}

.glitch-text {
  font-size: 5rem;
  font-weight: 900;
  color: #fff;
  position: relative;
  text-transform: uppercase;
  text-shadow: 
    0.05em 0 0 rgba(255,0,0,0.75),
    -0.025em -0.05em 0 rgba(0,255,0,0.75),
    0.025em 0.05em 0 rgba(0,0,255,0.75);
  animation: glitch 500ms infinite;
}

.glitch-text::before,
.glitch-text::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.glitch-text::before {
  animation: glitch-anim 650ms infinite;
  clip-path: polygon(0 0, 100% 0, 100% 45%, 0 45%);
  transform: translate(-0.025em, -0.0125em);
  opacity: 0.75;
}

.glitch-text::after {
  animation: glitch-anim 375ms infinite;
  clip-path: polygon(0 80%, 100% 20%, 100% 100%, 0 100%);
  transform: translate(0.0125em, 0.025em);
  opacity: 0.75;
}

.hero-subtitle {
  font-size: 1.5rem;
  color: #fff;
  margin: 2rem 0;
  font-family: 'Courier New', monospace;
  border: 2px solid #fff;
  padding: 1rem;
  background: #000;
  position: relative;
  overflow: hidden;
}

.language-list {
  font-family: 'Courier New', monospace;
  color: #fff;
  font-size: 1.2rem;
  margin-top: 1rem;
  letter-spacing: 0.2em;
  animation: float 3s ease-in-out infinite;
}

.contact-section {
  display: flex;
  justify-content: center;
  gap: 2rem;
  padding: 2rem;
  flex-wrap: wrap;
}

.contact-item {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 1.2rem;
  color: #fff;
}

.glitch-element {
  position: fixed;
  width: 2px;
  height: 50vh;
  background: rgba(255,255,255,0.1);
  pointer-events: none;
  animation: glitch-line 2s linear infinite;
}

@keyframes glitch-line {
  0% {
    transform: translateY(-100%) rotate(0deg);
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    transform: translateY(100vh) rotate(45deg);
    opacity: 0;
  }
}

.experience-section {
  padding: 4rem 2rem;
  position: relative;
  z-index: 2;
}

.section-title {
  font-size: 3rem;
  margin-bottom: 3rem;
  text-align: center;
}

.jobs-container {
  max-width: 1200px;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  gap: 2rem;
}

.jobs-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 2rem;
  padding: 2rem;
  position: relative;
  max-width: 1400px;
  margin: 0 auto;
}

.job-card {
  background: rgba(0, 0, 0, 0.8);
  border: 3px solid #fff;
  padding: 2rem;
  position: relative;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  animation: cardAppear 0.5s backwards;
  animation-delay: var(--delay);
  transform-origin: center;
  backdrop-filter: blur(10px);
  overflow: hidden;
  min-height: 300px;
  display: flex;
  flex-direction: column;
}

.job-card:hover {
  transform: scale(1.02) !important;
  z-index: 10;
  box-shadow: 
    0 0 30px hsla(var(--hue, 0), 100%, 50%, 0.2),
    0 0 60px hsla(var(--hue, 0), 100%, 50%, 0.1);
}

.card-glitch-effect {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    45deg,
    transparent,
    hsla(var(--hue, 0), 100%, 50%, 0.1),
    transparent
  );
  animation: glitchMove 3s infinite;
  pointer-events: none;
}

.job-card::before {
  content: '';
  position: absolute;
  inset: -2px;
  background: linear-gradient(
    45deg,
    transparent,
    hsla(var(--hue, 0), 100%, 50%, 0.5),
    transparent
  );
  z-index: -1;
  animation: borderGlow 2s infinite alternate;
}

.job-header {
  margin-bottom: 1.5rem;
}

.company-name {
  font-size: 1.5rem;
  font-weight: bold;
  color: #fff;
  text-shadow: 
    0 0 5px hsla(var(--hue, 0), 100%, 50%, 0.8),
    0 0 10px hsla(var(--hue, 0), 100%, 50%, 0.5);
  margin-bottom: 0.5rem;
}

.company-link {
  color: inherit;
  text-decoration: none;
  position: relative;
  display: inline-block;
}

.company-link::after {
  content: '';
  position: absolute;
  left: 0;
  bottom: -2px;
  width: 100%;
  height: 2px;
  background: currentColor;
  transform: scaleX(0);
  transition: transform 0.3s ease;
}

.company-link:hover::after {
  transform: scaleX(1);
}

.job-meta {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  font-family: 'Courier New', monospace;
  color: var(--chaos-color-3);
  margin-bottom: 1rem;
}

.job-role::after {
  content: '•';
  margin: 0 0.5rem;
}

.job-highlights {
  position: relative;
  z-index: 1;
  flex: 1;
  font-size: 0.9rem;
}

.highlight-item {
  position: relative;
  padding-left: 1.2rem;
  margin-bottom: 0.6rem;
  line-height: 1.4;
  transition: transform 0.2s ease;
}

.highlight-item:hover {
  transform: translateX(10px);
}

.highlight-item::before {
  content: '>';
  position: absolute;
  left: 0;
  color: hsla(var(--hue, 0), 100%, 50%, 1);
}

.code-link {
  display: inline-block;
  margin-top: 1.5rem;
  padding: 0.8rem 1.5rem;
  background: var(--chaos-color-2);
  color: #000;
  text-decoration: none;
  font-weight: bold;
  transition: transform 0.2s ease;
}

.code-link:hover {
  transform: translateX(5px);
}

.glitch-visible {
  animation: glitchReveal 0.5s forwards;
}

@keyframes cardAppear {
  from {
    opacity: 0;
    transform: translateY(50px) rotate(var(--rotation, 0deg));
  }
  to {
    opacity: 1;
    transform: translateY(0) rotate(var(--rotation, 0deg));
  }
}

@keyframes glitchMove {
  0% {
    transform: translateX(-100%) skew(-10deg);
  }
  50% {
    transform: translateX(100%) skew(10deg);
  }
  100% {
    transform: translateX(-100%) skew(-10deg);
  }
}

@keyframes borderGlow {
  0%, 100% {
    opacity: 0.5;
    filter: blur(2px);
  }
  50% {
    opacity: 1;
    filter: blur(0);
  }
}

@keyframes glitchReveal {
  0% {
    clip-path: inset(100% 0 0 0);
    transform: translateX(-10px);
  }
  100% {
    clip-path: inset(0 0 0 0);
    transform: translateX(0);
  }
}

@media (max-width: 1024px) {
  .jobs-grid {
    grid-template-columns: 1fr;
    padding: 1rem;
  }
  
  .job-card {
    min-height: auto;
  }
}

/* Add alternating card rotations */
.job-card:nth-child(odd) {
  transform: rotate(-1deg);
}

.job-card:nth-child(even) {
  transform: rotate(1deg);
}
